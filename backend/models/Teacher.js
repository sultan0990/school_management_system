// Teacher Model - Real Database Schema
// backend/models/Teacher.js

const mongoose = require('mongoose');

const teacherSchema = new mongoose.Schema({
  // Unique Teacher ID (Generated by Admin)
  teacherId: {
    type: String,
    required: true,
    unique: true,
    default: () => `TCH${Date.now()}${Math.floor(Math.random() * 1000)}`
  },
  
  // Personal Information
  firstName: {
    type: String,
    required: true,
    trim: true
  },
  lastName: {
    type: String,
    required: true,
    trim: true
  },
  mobile: {
    type: String,
    required: true,
    unique: true,
    validate: {
      validator: function(v) {
        return /^[6-9]\d{9}$/.test(v);
      },
      message: 'Invalid mobile number'
    }
  },
  email: {
    type: String,
    required: true,
    unique: true,
    trim: true,
    lowercase: true,
    validate: {
      validator: function(v) {
        return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v);
      },
      message: 'Invalid email address'
    }
  },
  gender: {
    type: String,
    enum: ['Male', 'Female', 'Other'],
    required: true
  },
  dateOfBirth: {
    type: Date,
    required: true
  },
  
  // Professional Information
  qualification: {
    type: String,
    required: true
  },
  subjects: [{
    type: String,
    required: true
  }],
  classes: [{
    type: String,
    required: true
  }],
  
  // Address Information
  currentAddress: {
    type: String,
    required: true
  },
  permanentAddress: {
    type: String,
    required: true
  },
  
  // Permissions
  hasStudentPermission: {
    type: Boolean,
    default: false
  },
  hasParentPermission: {
    type: Boolean,
    default: false
  },
  
  // Authentication
  isActive: {
    type: Boolean,
    default: true
  },
  loginAttempts: {
    type: Number,
    default: 0
  },
  lastLoginAttempt: {
    type: Date
  },
  
  // Timestamps
  joiningDate: {
    type: Date,
    required: true
  },
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true
});

// Index for faster queries
teacherSchema.index({ mobile: 1 });
teacherSchema.index({ teacherId: 1 });
teacherSchema.index({ email: 1 });

// Pre-save middleware
teacherSchema.pre('save', function(next) {
  this.updatedAt = Date.now();
  next();
});

// Instance method to check if teacher can login
teacherSchema.methods.canLogin = function() {
  if (!this.isActive) return false;
  if (this.loginAttempts >= 5) {
    const lockoutTime = new Date(this.lastLoginAttempt);
    lockoutTime.setHours(lockoutTime.getHours() + 24);
    return new Date() > lockoutTime;
  }
  return true;
};

module.exports = mongoose.model('Teacher', teacherSchema);
